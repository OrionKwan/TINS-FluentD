# Read SNMP trap log file
<source>
  @type tail
  @id in_snmp_trap
  path /var/log/snmptrapd.log
  tag snmp.trap
  pos_file /tmp/snmptrapd.pos
  read_from_head true
  
  <parse>
    @type regexp
    expression /^(SNMPTRAP: |FORMATTED: )(?<message>.*)/
  </parse>
</source>

# Fan-out Stage - Main Output Pipeline
<match snmp.trap>
  @type copy
  
  <store>
    # Kafka Output
    @type kafka2
    @id out_kafka
    brokers "#{ENV['KAFKA_BROKER'] || 'kafka:9092'}"
    topic "#{ENV['KAFKA_TOPIC'] || 'snmp_traps'}"
    
    <format>
      @type json
    </format>
    
    <buffer tag,time>
      @type file
      path /fluentd/buffer/kafka
      flush_mode interval
      flush_interval 5s
      timekey 60
      timekey_wait 5s
      retry_type exponential_backoff
      retry_wait 1s
      retry_max_interval 60s
      retry_forever true
      chunk_limit_size 64m
    </buffer>
  </store>
  
  <store>
    # UDP Output - using tagged_udp plugin instead
    @type tagged_udp
    @id out_tagged_udp
    host "#{ENV['UDP_FORWARD_HOST'] || '165.202.6.129'}"
    port "#{ENV['UDP_FORWARD_PORT'] || '1237'}"
    
    <format>
      @type json
    </format>
  </store>
  
  <store>
    # Debug output (can be disabled in production by setting environment variable)
    @type stdout
    <format>
      @type json
    </format>
  </store>
</match>

# Global error handling for all outputs
<label @ERROR>
  <match **>
    @type file
    @id out_error_file
    path /fluentd/log/error_%Y%m%d.log
    append true
    <format>
      @type json
    </format>
    <buffer time>
      @type file
      path /fluentd/buffer/error
      flush_mode interval
      flush_interval 5s
    </buffer>
  </match>
</label>

# Global log configuration
<system>
  log_level info
  log_path /fluentd/log/fluentd.log
</system>
